{"version":3,"file":"store.d.ts","names":[],"sources":["../src/middleware/store.d.ts"],"sourcesContent":["import { type WorkflowContext } from \"@llama-flow/core\";\nexport declare function withStore<T, Input extends void, WorkflowLike extends {\n    createContext(): WorkflowContext;\n} = {\n    createContext(): WorkflowContext;\n}>(createStore: () => T, workflow: WorkflowLike): Omit<WorkflowLike, \"createContext\"> & {\n    createContext(): ReturnType<WorkflowLike[\"createContext\"]> & {\n        getStore(): T;\n    };\n    getStore(): T;\n};\nexport declare function withStore<T, Input, WorkflowLike extends {\n    createContext(): WorkflowContext;\n} = {\n    createContext(): WorkflowContext;\n}>(createStore: (input: Input) => T, workflow: WorkflowLike): Omit<WorkflowLike, \"createContext\"> & {\n    createContext(input: Input): ReturnType<WorkflowLike[\"createContext\"]> & {\n        getStore(): T;\n    };\n    getStore(): T;\n};\n"],"mappings":";;;AACA,IAAW,YAAY;CAAC;CAAG,MAAM;CAAG,MAAM;CAAc,MAAM;CAAgB,MAAA;CAAA,MAAA;CAAA,MAAA;CAAA,MAAA;CAAA,MAAA;CAAA,MAAA;CAAA,MAAA;AAAA;AAC9E,IAAW,YAAY;CAAC;CAAG,MAAM;CAAG,MAAA;CAAA,MAAA;CAAA,MAAA;CAAA,MAAA;CAAA,MAAA;CAAA,MAAA;CAAA,MAAA;CAAA,MAAA;CAAA,MAAA;CAAA,MAAA;CAAA,MAAA;AAAA"}