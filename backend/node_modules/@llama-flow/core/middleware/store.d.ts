import { WorkflowContext } from "@llama-flow/core";

//#region src/middleware/store.d.ts
declare function withStore<T, Input extends void, WorkflowLike extends {
    createContext(): WorkflowContext;
} = {
    createContext(): WorkflowContext;
}>(createStore: () => T, workflow: WorkflowLike): Omit<WorkflowLike, "createContext"> & {
    createContext(): ReturnType<WorkflowLike["createContext"]> & {
        getStore(): T;
    };
    getStore(): T;
};
declare function withStore<T, Input, WorkflowLike extends {
    createContext(): WorkflowContext;
} = {
    createContext(): WorkflowContext;
}>(createStore: (input: Input) => T, workflow: WorkflowLike): Omit<WorkflowLike, "createContext"> & {
    createContext(input: Input): ReturnType<WorkflowLike["createContext"]> & {
        getStore(): T;
    };
    getStore(): T;
};

//#endregion
export { withStore };
//# sourceMappingURL=store.d.ts.map