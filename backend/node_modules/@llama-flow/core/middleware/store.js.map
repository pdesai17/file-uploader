{"version":3,"file":"store.js","names":["createStore: (input: Input) => T","workflow: WorkflowLike","input: Input"],"sources":["../src/middleware/store.ts"],"sourcesContent":["import { type WorkflowContext, getContext } from \"@llama-flow/core\";\n\nexport function withStore<\n  T,\n  Input extends void,\n  WorkflowLike extends {\n    createContext(): WorkflowContext;\n  } = {\n    createContext(): WorkflowContext;\n  },\n>(\n  createStore: () => T,\n  workflow: WorkflowLike,\n): Omit<WorkflowLike, \"createContext\"> & {\n  createContext(): ReturnType<WorkflowLike[\"createContext\"]> & {\n    getStore(): T;\n  };\n  getStore(): T;\n};\nexport function withStore<\n  T,\n  Input,\n  WorkflowLike extends {\n    createContext(): WorkflowContext;\n  } = {\n    createContext(): WorkflowContext;\n  },\n>(\n  createStore: (input: Input) => T,\n  workflow: WorkflowLike,\n): Omit<WorkflowLike, \"createContext\"> & {\n  createContext(input: Input): ReturnType<WorkflowLike[\"createContext\"]> & {\n    getStore(): T;\n  };\n  getStore(): T;\n};\nexport function withStore<\n  T,\n  Input,\n  WorkflowLike extends {\n    createContext(): WorkflowContext;\n  } = {\n    createContext(): WorkflowContext;\n  },\n>(\n  createStore: (input: Input) => T,\n  workflow: WorkflowLike,\n): Omit<WorkflowLike, \"createContext\"> & {\n  createContext(input: Input): ReturnType<WorkflowLike[\"createContext\"]> & {\n    getStore(): T;\n  };\n  getStore(): T;\n} {\n  return {\n    ...workflow,\n    getStore(): T {\n      const context = getContext();\n      return (context as any).getStore();\n    },\n    createContext(input: Input): ReturnType<WorkflowLike[\"createContext\"]> & {\n      getStore: () => T;\n    } {\n      const currentStore = createStore(input);\n      const context = workflow.createContext();\n      context.__internal__call_context.subscribe((_, next) => {\n        (getContext() as any).getStore = () => currentStore;\n        next(_);\n      });\n      (context as any).getStore = () => currentStore;\n      return context as ReturnType<WorkflowLike[\"createContext\"]> & {\n        getStore: () => T;\n      };\n    },\n  };\n}\n"],"mappings":";;;AAoCA,SAAgB,UASdA,aACAC,UAMA;AACA,QAAO;EACL,GAAG;EACH,WAAc;GACZ,MAAM,UAAU,YAAY;AAC5B,UAAO,AAAC,QAAgB,UAAU;EACnC;EACD,cAAcC,OAEZ;GACA,MAAM,eAAe,YAAY,MAAM;GACvC,MAAM,UAAU,SAAS,eAAe;AACxC,WAAQ,yBAAyB,UAAU,CAAC,GAAG,SAAS;AACtD,IAAC,YAAY,CAAS,WAAW,MAAM;AACvC,SAAK,EAAE;GACR,EAAC;AACF,GAAC,QAAgB,WAAW,MAAM;AAClC,UAAO;EAGR;CACF;AACF"}