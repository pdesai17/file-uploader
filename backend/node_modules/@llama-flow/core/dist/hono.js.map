{"version":3,"file":"hono.js","names":["workflow: Workflow","getStart: (\n    c: Context,\n  ) => WorkflowEventData<Start> | Promise<WorkflowEventData<Start>>","stopEvent: WorkflowEvent<Stop>","wrapStopEvent?: (c: Context, stop: Stop) => Response"],"sources":["../src/hono.ts"],"sourcesContent":["import type { Context, Handler } from \"hono\";\nimport type {\n  Workflow,\n  WorkflowEvent,\n  WorkflowEventData,\n} from \"@llama-flow/core\";\nimport { runWorkflow } from \"./stream/run\";\n\nexport const createHonoHandler = <Start, Stop>(\n  workflow: Workflow,\n  getStart: (\n    c: Context,\n  ) => WorkflowEventData<Start> | Promise<WorkflowEventData<Start>>,\n  stopEvent: WorkflowEvent<Stop>,\n  wrapStopEvent?: (c: Context, stop: Stop) => Response,\n): Handler => {\n  if (!wrapStopEvent) {\n    wrapStopEvent = (c, stop) => {\n      return c.json(stop as any);\n    };\n  }\n  return async (c) => {\n    const stop = await runWorkflow(workflow, await getStart(c), stopEvent);\n    return wrapStopEvent(c, stop.data);\n  };\n};\n"],"mappings":";;;AAQA,MAAa,oBAAoB,CAC/BA,UACAC,UAGAC,WACAC,kBACY;AACZ,MAAK,cACH,iBAAgB,CAAC,GAAG,SAAS;AAC3B,SAAO,EAAE,KAAK,KAAY;CAC3B;AAEH,QAAO,OAAO,MAAM;EAClB,MAAM,OAAO,MAAM,YAAY,UAAU,MAAM,SAAS,EAAE,EAAE,UAAU;AACtE,SAAO,cAAc,GAAG,KAAK,KAAK;CACnC;AACF"}